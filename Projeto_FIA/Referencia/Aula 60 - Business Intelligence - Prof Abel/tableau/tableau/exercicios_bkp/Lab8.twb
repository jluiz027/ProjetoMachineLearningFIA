<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.16.1103.2343                               -->
<workbook source-build='10.1.1 (10100.16.1103.2343)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Múltiplas conexões)' inline='true' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SuperStoreUS_2015' name='excel-direct.12owkhb1jy0xpm0ztn60k03hac1y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\tableau\bases\SuperStoreUS_2015.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Priority' name='msaccess.0vxyea30vzznj21a2wwt90fybhoi'>
            <connection authentication='no' class='msaccess' driver='' filename='C:\tableau\bases\Priority.mdb' mdwpath='' server='' username='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[ID Priority]' />
              <expression op='[Priority].[ID Priority]' />
            </expression>
          </clause>
          <relation connection='excel-direct.12owkhb1jy0xpm0ztn60k03hac1y' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:Y1953:no:A1:Y1953:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='real' name='ID Priority' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='real' name='Unit Price' ordinal='3' />
              <column datatype='real' name='Shipping Cost' ordinal='4' />
              <column datatype='integer' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='string' name='Customer Segment' ordinal='8' />
              <column datatype='string' name='Product Category' ordinal='9' />
              <column datatype='string' name='Product Sub-Category' ordinal='10' />
              <column datatype='string' name='Product Container' ordinal='11' />
              <column datatype='string' name='Product Name' ordinal='12' />
              <column datatype='real' name='Product Base Margin' ordinal='13' />
              <column datatype='string' name='Country' ordinal='14' />
              <column datatype='string' name='Region' ordinal='15' />
              <column datatype='string' name='State or Province' ordinal='16' />
              <column datatype='string' name='City' ordinal='17' />
              <column datatype='integer' name='Postal Code' ordinal='18' />
              <column datatype='date' name='Order Date' ordinal='19' />
              <column datatype='date' name='Ship Date' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='integer' name='Quantity ordered new' ordinal='22' />
              <column datatype='real' name='Sales' ordinal='23' />
              <column datatype='integer' name='Order ID' ordinal='24' />
            </columns>
          </relation>
          <relation connection='msaccess.0vxyea30vzznj21a2wwt90fybhoi' name='Priority' table='[Priority]' type='table' />
        </relation>
        <cols>
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Customer Segment]' value='[Orders].[Customer Segment]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[ID Priority (Priority)]' value='[Priority].[ID Priority]' />
          <map key='[ID Priority]' value='[Orders].[ID Priority]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Priority].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product Base Margin]' value='[Orders].[Product Base Margin]' />
          <map key='[Product Category]' value='[Orders].[Product Category]' />
          <map key='[Product Container]' value='[Orders].[Product Container]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Product Sub-Category]' value='[Orders].[Product Sub-Category]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity ordered new]' value='[Orders].[Quantity ordered new]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State or Province]' value='[Orders].[State or Province]' />
          <map key='[Unit Price]' value='[Orders].[Unit Price]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Priority</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ID Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>ID Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y1953:no:A1:Y1953:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Priority</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ID Priority (Priority)]</local-name>
            <parent-name>[Priority]</parent-name>
            <remote-alias>ID Priority</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Priority]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2_WO' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Média de Lucros' datatype='real' default-format='p0.00%' name='[Calculation_468655845269319681]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[ID Priority (Priority)]' role='dimension' type='ordinal' />
      <column datatype='real' name='[ID Priority]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='Local'>
          <field>[State or Province]</field>
          <field>[Country]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\tableau\bases\Orders+ (Múltiplas conexões).tde' schema='Extract' tablename='Extract' update-time='05/21/2017 07:48:56 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country]' value='[Extract].[Country]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Customer Segment]' value='[Extract].[Customer Segment]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[ID Priority (Priority)]' value='[Extract].[ID Priority]' />
            <map key='[ID Priority]' value='[Extract].[ID Priority1]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID]' value='[Extract].[Order ID]' />
            <map key='[Order Priority]' value='[Extract].[Order Priority]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product Base Margin]' value='[Extract].[Product Base Margin]' />
            <map key='[Product Category]' value='[Extract].[Product Category]' />
            <map key='[Product Container]' value='[Extract].[Product Container]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Product Sub-Category]' value='[Extract].[Product Sub-Category]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity ordered new]' value='[Extract].[Quantity ordered new]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[Shipping Cost]' value='[Extract].[Shipping Cost]' />
            <map key='[State or Province]' value='[Extract].[State or Province]' />
            <map key='[Unit Price]' value='[Extract].[Unit Price]' />
          </cols>
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1952' timestamp-start='2017-05-21 19:48:56.100' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>869</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aberdeen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yucaipa&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;United States&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1130</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3387455.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1735.376536885246</statistic>
                <statistic aggregation='Min' datatype='integer'>3</statistic>
                <statistic aggregation='Max' datatype='integer'>3403</statistic>
                <statistic aggregation='Stdev' datatype='real'>991.07800635591434</statistic>
                <statistic aggregation='StdevP' datatype='real'>990.82411164024415</statistic>
                <statistic aggregation='Var' datatype='real'>982235.61468241375</statistic>
                <statistic aggregation='VarP' datatype='real'>981732.42020767892</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7794851611.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1130</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Day&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zachary Maynard&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Segment</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Small Business&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95.599999999999952</statistic>
                <statistic aggregation='Avg' datatype='real'>0.048975409836065548</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.20999999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.031378305600589129</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.031370267095115714</statistic>
                <statistic aggregation='Var' datatype='real'>0.00098459806236396311</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00098409365761889956</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6.6029999999999562</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID Priority</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ID Priority (Priority)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID Priority</remote-alias>
              <ordinal>6</ordinal>
              <family>Priority</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>43097.0</statistic>
                <statistic aggregation='Avg' datatype='real'>22.078381147540984</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>99.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.828243587555299</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.81829655432238</statistic>
                <statistic aggregation='Var' datatype='real'>1507.6325000945292</statistic>
                <statistic aggregation='VarP' datatype='real'>1506.8601473793167</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3892903.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID Priority1</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ID Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID Priority1</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>43097.0</statistic>
                <statistic aggregation='Avg' datatype='real'>22.078381147540984</statistic>
                <statistic aggregation='Min' datatype='real'>1.0</statistic>
                <statistic aggregation='Max' datatype='real'>99.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>38.828243587555299</statistic>
                <statistic aggregation='StdevP' datatype='real'>38.81829655432238</statistic>
                <statistic aggregation='Var' datatype='real'>1507.6325000945292</statistic>
                <statistic aggregation='VarP' datatype='real'>1506.8601473793167</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3892903.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>8</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1952.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1952.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>179</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-06-30#</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='Median' datatype='date'>#2015-03-28#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1365</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>160778284.0</statistic>
                <statistic aggregation='Avg' datatype='real'>82365.924180327871</statistic>
                <statistic aggregation='Min' datatype='integer'>359</statistic>
                <statistic aggregation='Max' datatype='integer'>91586</statistic>
                <statistic aggregation='Stdev' datatype='real'>19042.295797830284</statistic>
                <statistic aggregation='StdevP' datatype='real'>19037.417535729532</statistic>
                <statistic aggregation='Var' datatype='real'>362609029.25206494</statistic>
                <statistic aggregation='VarP' datatype='real'>362423266.42970222</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>13950102165858.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Priority</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order Priority]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Priority</remote-alias>
              <ordinal>11</ordinal>
              <family>Priority</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>255</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Critical&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Not&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1020</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>981</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>100595870.0</statistic>
                <statistic aggregation='Avg' datatype='real'>51534.769467213118</statistic>
                <statistic aggregation='Min' datatype='integer'>1001</statistic>
                <statistic aggregation='Max' datatype='integer'>99362</statistic>
                <statistic aggregation='Stdev' datatype='real'>29362.828419841469</statistic>
                <statistic aggregation='StdevP' datatype='real'>29355.306240028054</statistic>
                <statistic aggregation='Var' datatype='real'>862175692.81304979</statistic>
                <statistic aggregation='VarP' datatype='real'>861734004.44582999</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6866289746482.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Base Margin</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Product Base Margin]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Base Margin</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>997.40000000000111</statistic>
                <statistic aggregation='Avg' datatype='real'>0.51518595041322368</statistic>
                <statistic aggregation='Min' datatype='real'>0.34999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.13705490903982381</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.13701950805536658</statistic>
                <statistic aggregation='Var' datatype='real'>0.018784048091914377</statistic>
                <statistic aggregation='VarP' datatype='real'>0.018774345587734671</statistic>
                <statistic aggregation='Count' datatype='integer'>1936</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>550.19360000000427</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Container</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Container]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Container</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Jumbo Box&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wrap Bag&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>913</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\&quot;While you Were Out\&quot; Message Book, One Form per Page&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zoom V.92 V.44 PCI Internal Controllerless FaxModem&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Sub-Category</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Appliances&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Telephones and Communication&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1898</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>224077.61183714995</statistic>
                <statistic aggregation='Avg' datatype='real'>114.7938585231301</statistic>
                <statistic aggregation='Min' datatype='real'>-16476.838</statistic>
                <statistic aggregation='Max' datatype='real'>9228.2255999999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>1141.1123869963926</statistic>
                <statistic aggregation='StdevP' datatype='real'>1140.8200564198019</statistic>
                <statistic aggregation='Var' datatype='real'>1302137.4797566046</statistic>
                <statistic aggregation='VarP' datatype='real'>1301470.40112968</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2566192956.6765704</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity ordered new</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Quantity ordered new]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity ordered new</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>25268.0</statistic>
                <statistic aggregation='Avg' datatype='real'>12.944672131147541</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>167</statistic>
                <statistic aggregation='Stdev' datatype='real'>13.87156479591691</statistic>
                <statistic aggregation='StdevP' datatype='real'>13.868011173520717</statistic>
                <statistic aggregation='Var' datatype='real'>192.42030988732134</statistic>
                <statistic aggregation='VarP' datatype='real'>192.32173390889545</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>702498.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Central&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>2</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>21</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1951</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>38876968.0</statistic>
                <statistic aggregation='Avg' datatype='real'>19916.47950819672</statistic>
                <statistic aggregation='Min' datatype='integer'>64</statistic>
                <statistic aggregation='Max' datatype='integer'>26389</statistic>
                <statistic aggregation='Stdev' datatype='real'>5957.595626680335</statistic>
                <statistic aggregation='StdevP' datatype='real'>5956.0694077167282</statistic>
                <statistic aggregation='Var' datatype='real'>35492945.651040658</statistic>
                <statistic aggregation='VarP' datatype='real'>35474762.789539099</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>843539073478.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>22</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1922</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1924337.8799999992</statistic>
                <statistic aggregation='Avg' datatype='real'>985.82883196721275</statistic>
                <statistic aggregation='Min' datatype='real'>2.25</statistic>
                <statistic aggregation='Max' datatype='real'>45737.330000000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>2559.9001667134776</statistic>
                <statistic aggregation='StdevP' datatype='real'>2559.2443705795667</statistic>
                <statistic aggregation='Var' datatype='real'>6553088.8635396892</statistic>
                <statistic aggregation='VarP' datatype='real'>6549731.7483432032</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14682144137.316595</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>23</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>187</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2015-01-02#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-07-08#</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>24</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Delivery Truck&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Regular Air&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shipping Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shipping Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shipping Cost</remote-alias>
              <ordinal>25</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>25313.830000000198</statistic>
                <statistic aggregation='Avg' datatype='real'>12.968150614754199</statistic>
                <statistic aggregation='Min' datatype='real'>0.48999999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>164.72999999999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.414631417381127</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.41017013091945</statistic>
                <statistic aggregation='Var' datatype='real'>303.26938740323777</statistic>
                <statistic aggregation='VarP' datatype='real'>303.11402398755985</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>919952.13490000286</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State or Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State or Province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State or Province</remote-alias>
              <ordinal>26</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='3' name='LPT_RBR_S1' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;pt_BR_CI_AI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Price</remote-alias>
              <ordinal>27</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>597</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>212922.640000001</statistic>
                <statistic aggregation='Avg' datatype='real'>109.07922131147592</statistic>
                <statistic aggregation='Min' datatype='real'>1.1399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>6783.0200000000004</statistic>
                <statistic aggregation='Stdev' datatype='real'>393.48130109073202</statistic>
                <statistic aggregation='StdevP' datatype='real'>393.38049891126553</statistic>
                <statistic aggregation='Var' datatype='real'>154827.5343080553</statistic>
                <statistic aggregation='VarP' datatype='real'>154748.21692367617</statistic>
                <statistic aggregation='Count' datatype='integer'>1952</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>325293955.2057997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.611111' measure-ordering='alphabetic' measure-percentage='0.388889' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[Region]' filter-group='2'>
        <groupfilter from='&quot;Central&quot;' function='range' level='[Region]' to='&quot;West&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Destacar 1 (gerado)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Painel 2' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Product Container' />
        <param name='target' value='Painel 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Análise de Desempenho por Estado'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#59a14f'>Análise de Desempenho por Estado</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk] + [federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk])</rows>
        <cols>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Análise por Prioridade'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Análise por Prioridade</run>
            <run bold='true' fontcolor='#e15759'> (itens críticos)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Priority:nk]'>
            <groupfilter function='member' level='[none:Order Priority:nk]' member='&quot;Critical&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Priority:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk] + [federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk])</rows>
        <cols>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Indicadores'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Indicadores</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column caption='Média de Lucros' datatype='real' default-format='p0.00%' name='[Calculation_468655845269319681]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_468655845269319681]' derivation='User' name='[usr:Calculation_468655845269319681:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[usr:Calculation_468655845269319681:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[usr:Calculation_468655845269319681:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Date:qk]' included-values='in-range'>
            <min>#2015-01-01#</min>
            <max>#2015-12-31#</max>
          </filter>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]'>
            <groupfilter function='level-members' level='[none:State or Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]</column>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Date:qk]</column>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Region:nk]</column>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]' value='151' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]' value='21' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#f28e2b' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Arial Black' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Lucro por Produto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#499894'>Lucro por Produto</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' />
              <wedge-size column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Lucros por Estado e Produto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7'>Lucros por Estado e Produto</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' value='69' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' />
              <size column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</rows>
        <cols>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mapa de Lucros'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#76b7b2'>Mapa de Lucros</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Lucros' datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Vendas' datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Estados' datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State or Province]' derivation='None' name='[none:State or Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Date:qk]' included-values='in-range'>
            <min>#2015-01-01#</min>
            <max>#2015-12-30#</max>
          </filter>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Region:nk]'>
            <groupfilter from='&quot;Central&quot;' function='range' level='[none:Region:nk]' to='&quot;West&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]'>
            <groupfilter function='level-members' level='[none:State or Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Date:qk]</column>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Region:nk]</column>
            <column>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Country:nk]' />
              <lod column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]' />
              <lod column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Postal Code:ok]' />
              <color column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' />
              <size column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[Latitude (generated)]</rows>
        <cols>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Novos Pedidos por Produto'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#499894'>Novos Pedidos por Produto</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Múltiplas conexões)' name='federated.1jg2nkp0y2zh0b13fu9291vcn8ru' />
          </datasources>
          <datasource-dependencies datasource='federated.1jg2nkp0y2zh0b13fu9291vcn8ru'>
            <column datatype='string' name='[Product Container]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity ordered new]' role='measure' type='quantitative' />
            <column-instance column='[Product Container]' derivation='None' name='[none:Product Container:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity ordered new]' derivation='Sum' name='[sum:Quantity ordered new:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' />
              <wedge-size column='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Quantity ordered new:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Painel 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99500' id='4' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='60322' id='1' name='Análise de Desempenho por Estado' w='100000' x='0' y='39178' />
              <zone h='39178' id='3' name='Análise por Prioridade' w='100000' x='0' y='0' />
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Tablet'>
          <zones>
            <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='100000' id='6' param='vert' type='layout-flow' w='100000' x='0' y='0'>
                <zone h='99500' id='4' type='layout-basic' w='100000' x='0' y='0'>
                  <zone h='60323' id='1' name='Análise de Desempenho por Estado' w='100000' x='0' y='39177' />
                  <zone h='39177' id='3' name='Análise por Prioridade' w='100000' x='0' y='0' />
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Painel 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='21625' id='3' name='Lucros por Estado e Produto' show-caption='true' w='82900' x='800' y='31250' />
        <zone h='29750' id='6' name='Lucro por Produto' w='32800' x='48000' y='11375' />
        <zone h='30250' id='7' name='Novos Pedidos por Produto' w='20300' x='62800' y='11000' />
        <zone h='19750' id='8' name='Novos Pedidos por Produto' pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' type='color' w='14000' x='83100' y='16250' />
        <zone h='45375' id='9' name='Análise por Prioridade' w='49700' x='49600' y='54000' />
        <zone h='44250' id='10' name='Análise de Desempenho por Estado' w='47900' x='400' y='53500' />
        <zone h='30625' id='11' name='Mapa de Lucros' w='46700' x='1000' y='125' />
        <zone h='7125' id='12' name='Lucros por Estado e Produto' pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' type='color' w='14000' x='67100' y='42750' />
        <zone h='17250' id='13' name='Lucros por Estado e Produto' pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]' type='size' w='14000' x='83300' y='36875' />
        <zone h='26750' id='14' name='Indicadores' w='47400' x='48900' y='875' />
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Análise de Desempenho por Estado'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Análise por Prioridade'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Lucro por Produto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Novos Pedidos por Produto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Lucros por Estado e Produto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Painel 1'>
      <viewpoints>
        <viewpoint name='Análise de Desempenho por Estado'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Análise por Prioridade' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
    </window>
    <window class='dashboard' maximized='true' name='Painel 2'>
      <viewpoints>
        <viewpoint name='Análise de Desempenho por Estado'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Análise por Prioridade'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Indicadores' />
        <viewpoint name='Lucro por Produto' />
        <viewpoint name='Lucros por Estado e Produto' />
        <viewpoint name='Mapa de Lucros'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Novos Pedidos por Produto'>
          <highlight field='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Product Container:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Mapa de Lucros'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Profit:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:City:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Country:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Order Date:qk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Postal Code:ok]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:Region:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[none:State or Province:nk]</field>
            <field>[federated.1jg2nkp0y2zh0b13fu9291vcn8ru].[sum:Sales:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Indicadores'>
      <cards>
        <edge name='left'>
          <strip size='170'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Análise de Desempenho por Estado' width='192'>
      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
      qRCiFzhJ/P8wcTUohe/a0AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Análise por Prioridade' width='192'>
      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
      1sd6P2k0Gpi2xMxqBgDbspHkbXupI+yjK+onmauQypUd8cf6Yng0hamVDLphPl4EkiRwayoj
      fVGqDeOxD/nOtJ3RAImwl/VM6fE2up3xx/vjuDSF+4tpLMvCtm0kJJDA69Y42hOhVNVZ3Mw5
      0vbEg8SCHlZSRfLlmiP+xGAHiiJz76EZYtv2Y1fegNfFUFeYfLnBSirvSNufCBH2u1naLFCs
      1h3pTw8nsGybicW0I23Y76E/ESRbrLG2VXTED3VFCHg15tdzVOo62NuuApIkIUsSp4YT6IbJ
      5PKWI20s6KUnHmhyAbcsy/H3zGqWum40vStVURgbiFHXzWfWg81shXTeWQ9G+mK4NYWp5Qy6
      2b4eVOoG8+vOenBisANVkbk3n9q+V/tF1/gWDMNAUZTHL3Dny3wUr+7w6d8Z/+gjG4/iHxX9
      Ufyz0j5P3pZlPd6nsJ95PxLUfuTdmtY0ze0K+7Di7aVcB5n3QdWD1nfx0pfjmjaN2BZL03e5
      dOkSm/ntlrPpIdRK3Lpxlcs372I83LG0M71pGFTLhe3WqyUttsncxG0uXbpMuthwxNuWSbGQ
      p1p/snvocbxtkcnlwDLI5AvOtLbJ1N2bXLpylWzFee1GOcu1q5e5dmfqcdyTvG1SK7NcvnyF
      +bWtNnnbVEtFipXqjpbtSbxpGDTqFYrlWtu8Nxan+OrSZZaSeWdavca9W9e5fP0WlYbZNu96
      tUTpYU/TnLdFQ9ebXC+a3lWjwvjNa1y+MU7j4RbQ5udt0DBMjIc79h6LyrKo12vUanVqtdrj
      99xULtPA0OvkCqXHlX1nPTD0BvVGA91w3lOjnOP61StcHX/guCe90TgYATwuYCXJnaklNAk2
      i9sVaedOsaX5GeZTZVSrimnZTa0RwNWrX3Lt2i1ujN91pKW0xo2pdXyKRapiOPOeusNyKsuX
      l68CNOWdT6/z2edfMDM1yexy0pl3fpErUyn8qkW2ajri79ydoqSb6JWcI2/MGjOT96jhfiyu
      nWkb+RWuTSwxc+c6mw+FuzP++rWr3L55i69u3HA+T73I7PQD6pbGVqHsSJvbmOfGXIaQZlDR
      rTZ5X+bGzXGutsvbMlhfXWLi3l2WNrawW9JuLs0ysZLHJzeom7Yj73tXPuNn1+9x/catprxt
      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
    </thumbnail>
    <thumbnail height='44' name='Indicadores' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAsCAYAAAAzWrf+AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAHg0lEQVR4nO2cf0xV5xnHP4d7D9x7AW9S71aFqlC1WHBqRNoNHSyrWn8slgVptmpm27BU
      Z8u2P6zLug22aLJApsa2S7MuUpbUGKhT57R1ooLNmBas4mCKLYIymI6rgwgX7j333Hd/3HMV
      FASVH+J5P8lJ7nue57zPe17e73me98JBEUIIJBKTEjbaA5BIRhMpAImpkQKQmBopAImpkQKQ
      mBopAImpkQKQmBopAImpkQKQmBopAImpkQKQmBopAImpkQKQmBrraA9AMjgCn6+hs/wUEIv6
      /UPYJhiG6zvoLNpCAAhLLyVy7oS79HLv6Cez8FScA17A/tPNj9yCkRlgjBA2fYnxw2rGf6H2
      5nn9i48JAJCMOn1oF78ZeNQE/egSvQg1ZjPeFhCNJ9HTkrDgRm88F7THLMcaDaATqNtM17H9
      BLq6wDIOZXI29iWvYrGB/+BMuuqAhG04YvbQdbwcoSSgrtiBbYoT9Hp8+1/H29AEEzZgi7t9
      IO3oJ3PpqipH+DTADo/NJ2L57wh3WaD7DN5PfonvcgPoQHg81vnbsM+ZOnJzdQ/IDDBmcKHO
      /Hbw47WP8V8HvCfwtwRPWWYuJwwQdT+n82AxAV7A/kY1jpRYRMMWPPuKjUxhcHkTnmPlCB3w
      16GV70YH9H/kBBc/wJUCuiu/7D2MS2/jqSg1Fj9AF1wvxXtkNwF0/EdfwdfQgCXtONHrtmFV
      GvAfy6H76jBNywMiBTCGUKYtxWoBOId+2Y2oP4IOYFmEOi0ScKOdORB0nv48VqsFy/TFKAAt
      e9DaenQWeBbbumocyVOC7Wv1CBrxX7wUbE/bRlTOcSIm9R6D//zu4IfxP8aRU0PUwm8G2y3V
      BOhGeIPC0D/9Lh1/OYySvAVH9p+xPT7EkzFEyBJoLBGRhnWKiv+ihl53GC26LHh+ymKsEQAd
      CK/he/YVbpztefE/CbjBEmpGJRBms2CJmQOnLt0RKuyr01Asj2GJmQahMguwPn+CqLnV+Js+
      Q9u/Gq3pTI+rIlG/vhZv03sI/zVE8wG05gNoFS7UzCPYJlvuiDPaSAGMKSJR52TSfXEXtLyD
      N0IDVKxJxlOeKJQIwzVuE5ErMgi7bc35L9ytf8tNhQRaahD6OPSWniVQJ/5Dy+n6lxvsC1C/
      tZHIhF10frLvlsvE14la/yqB/57CX/8R2ukjBPxutC8+xzY55cFufxiQJdBY44lFqBEA7eAF
      LMtQ40OrvMc+ofEXdG6fyY2txvGn99H1gTqfhPp0snH9z+jYnobvfzE97K3oV90AKDPWYpse
      i/5lWQ/7ebp3zOTG9mfw1EWjLvgNagyAinVi4oPc9bAhBTDWsDyLmuC81X56hbEvCKIkFeBI
      X4gSrhr+41Bi12J/8YdYBlGBhM3+FRHxRuE/YQP2+XN6WOMIT3+ZsHAVcXo1N95bgz/iGSP7
      XCHQMQNb5jbUx8cjTq+mY+t8vFfisaYWYkuMfLD7HiYU+W9RJGZGZgCJqZECkJgaKQCJqZEC
      kJiaAX8PUFVVNRLjkEhGBfktkMTUyBJIYmqkACSmRgpAYmqkACSmRgpgtOiqYmOSgqIoJOXV
      3tXv9ytn4QwP+jpcyazZWU/odRS0av6wMhmXI2hXHC5mLC2gquvOrtwlL/IVRUFRkug3pPYf
      9v3oVn/hzqkszSvHPWh7PTvX9B5P8pqd1Gt9hxt1hGRk8bWLsx9tEM9NVAUgAJGYW9OPc5so
      znLe9Lt1uMRLe9qEED5xKNvVhx3hzCoWbT3DnskVs9WQPVH0F7ImN7GP/lSxrLBtUPaj6/oe
      j2vd0SGbwqFEZoARpnbzN5i1soAjblAH9P4bJSXtgJOMD1sRvhaKMpyAm50FhTRzkqOf+lCB
      uPVleISH0tdiAWjfu5djoW7cJaxa+GuqceFy9h0pSDOnz+s8Md5O4ltn8PnKWB8LoNHY+O9B
      2MHtDuaC+DeO4xHt7MqM6nX+YUMKYKRRnXwtM5/SSx+QcS/X+TV6VRGVlVSygN+eb8cnBA3v
      pGOnk6tXO4L2lBRSALRq8hauosStkppfZCzY/ohl9a7zNLk91G6aDe5LNHcAuEhNfWoQdlic
      ncMMOzS8nYZDcfK93R1gn8emt+7pbkeO0U5B5qVYZA1YAgkhWstE7nMThQrCPm+TKHrzqWBZ
      ob4k9hguvpa9InuqUVLZ54kNZa1GiKw+y5HQkVU80Bg9ovS1WAEINXWraBjQfkhkO417erNS
      eESr2Lc6aCdug/jsPmZpuJEZ4KGiljxjY6wk5VEL4Eonr7QFnxB4Kr7Dhb8a7zSGnvDuElbN
      yuCP9Rqu9FzKLleSn+66z3iHyHlyEi6HQtLGKnruo7WKCioHtLfT3h5sezo7gUgiQ+/BNDfT
      fN/zMoyMtgLNS18ZoEbkJhpP6MRcUTPgJrhNFC5T+3nCZ4k7H/Ch/kOb4Nvj+cTffxJ3l031
      QPb+x3P7pvxhQWaAhxonWUWl5C95knHGjtk+fi4/+PAEH2Q4obmQ9w8O5feLKqn5FexdN5fx
      dkIBmZv5LqVFWTgHtDt5uegwuUsS+rE/fMg/hpOYGpkBJKbm/zULCyrj269AAAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='164' name='Lucro por Produto' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lucros por Estado e Produto' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mapa de Lucros' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Novos Pedidos por Produto' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAACkCAYAAAAZtYVBAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJw0lEQVR4nO3d309b5x3H8U9gISy2Ekj9AzVpqpCoDYg0rapIabNRLVHa7WaammnNbib1
      qlEu8g80V212t01bNG3tpPZiW7dqLdNW7SZtQRoqW5RuUBJEfrSAQmABDBiCbXD8I7ugDzHG
      2OfYx+d8n8efl1SlIWCeuu98n/PDwJYHDx48AJEQdV4vgCgXgyRRGCSJwiBJFAZJojBIEoVB
      kigMkkRhkCQKgyRRGCSJwiBJFAZJojBIEoVBkigMkkRhkCQKgyRRGCSJwiBJFAZJojBIEoVB
      kigMkkRhkCQKgyRRGCSJwiBJFAZJojBIEoVBkigMkkRhkCQKgyRRGCSJwiBJFAZJojBIEoVB
      kigMkkRhkCQKgyRRGCSJwiBJFAZJojBIEoVBkijf8HoBOktEY0gsxJCIxgEAc2NTOW+PIxGN
      4R9NzQg1+RBqXv0HAMLNPoSafOhoDXm2dqm28Ae425OIxjA7No07/V9hdmy65Pu/+6Ch6J93
      7AuhozWEH5/ocGqJWmOQFiSiMYz3j2BubMpShLlKBZkr1OzDK0ea8Z0D21C/54jdZRqBW3YR
      4/0juNkziEQ05srnm4nGkfz3n5EYuIq6HY+i4bmz2Nr+A1c+txSckAUkojEMdPXZnoaF2JmQ
      gfoF/HLXr9e9rW7Ho2h86ac1MzE5IXMkojHc7BnEeP+IJ58/WLe44W3Ze/9D4oNXUb/nCBpf
      uoC6Hbs9WJl7OCHx8BjxZs+g449tZ0K+3vQHtG29XfR9Go6exbbnzla6LLFq/jpkIhpD3zsf
      VyVGOwL1CyVjBID7l3+D+DsvIjPxuQurcl9NB3mjexCf/Oyvrp20FGMlRkVt46nhv1VxRd6o
      ySAT0RhudA96PhVzdTZetf0xK5fOY+XS61VYjXdqLkh14iIpRqvbdSGp4b8j8cGrDq/IOzUV
      pDpe9OosejOd2+xPx1yZic+NOa6smSBVjBKOF3MF6hfw7cbKp3U6MovouxcdWJG3aiJIdaFb
      WozA6rXHYP3G6492ZJMNSEaakRjOYPqNNx1amTdqIsjx/hFH7rpUw8u+3oo+PptsQHx0D1Ym
      wwCA5PB1LH7Y5cTSPGF8kNW64O2ESk5mgIcxpu/517198cMurAwPV7o8TxgdpNqqpapGjMrM
      Gxe0jNLYILPJadz57OdeL6Oocq49AqVjVOZ/+zbSkUhZn8Mrxga5PPkeguHLeOpYt9dLKajc
      7TqbbMDS9daSMQJAOhLR7njSyCCzyWkkZz8BAOwMzODIyY+wMzDj8arWK+fao4oxm7T+go34
      P3u12rqNDDI2+ot1v2/cHsdTx7rxxDOXPVrRRm0N9qZjOTEqOk1J44JM3buK9FLh6RPeOyZi
      WrZtvW3vxRQVxAisXgrSZUoaF+Ty5HtF/1xNy71PXnNpRRvZuTNTaYwAsOT34dOvbpX98W4y
      6hXjxaZjvscPDiG8dwy3Bo5icda9L0cN1C9YPruuNMYlvw9Xnj6EGwf2AQDa5+fQuuuRsh7L
      LUZNyFLTMZ8X07LQlykUUkmMS34fur91FL//4ffXYgSAv1z7wvZjuc2YCZlNTluejvnUtLzW
      dwIrCZ/DK1vPyq3CcmPMn4j5ossJRJcTaP7mdluP6yZjglSXecrVuD2OIyc/wu0bHRi/ecih
      Va1n5dpjOTGWCjHXfybv4OSBJy0/ttuMCTJ1z5lt9/GDQ2gKzOBq3wlHHi+XlRgXvzho+fHs
      hKiMzs9Zfl8vGBFkJdt1Iepi+vjNQ5get/4/u5RiJzN2YiwnRGV0fk70tm1EkCkHY1Qat8fx
      xDOXEX5s1JFpWWy7thpjJSHmGp2fw7O7GWTVJCOfVu2x1bSs9PLQZrcKrcToVIjKyPwcnt39
      mCOP5TTtg3R6uy5EXR6aHt+HWwNHy3qMQrcK70eaER/dPAynQ1T+O3kHPzr0tKOP6RTtg8wk
      3XsleHjvGHYGZmxPy0K3CovFWK0Qc40KvUiufZDZ++5+aYKalnYuD+XfKtwsxmqEmM6sfh1R
      MnUXyft3kc7EkMkuYSLqQ+uu4459HqfoH6SLEzKX1VuP+bcKC8Wo7qxMtlR2CzOdiSGTWUI6
      G1uLL5m6W/B9IzFZL8dTtA/SS1amZe6twuWJ8NoXYwHlh1ho6m0W3mYYZJVkk94/scVuPapb
      hbkx2gkxN7Zy49OJ9kG6eVJTzGa3Htu23l6LsViIdrZbJ3BCVonbJzWl5N96XJ4II7LYiu7v
      PgxRxZa8//XkS91d24bdMhuXGaT237B0/sr3vF5CQSsJH24NHMUV3wrGQ9tFbrd/+om8b+en
      /YSs2xZ25Ux7LrUFAPBlou7rX7dgPrVl7fcbpYFHPlv913tVX55tQb/Mn5Gjf5ANzgVpPzp9
      BXwMsirqt4WRXrL+/ptFN5da/ZW8pX2QhTC60tpbZP7kMO2DHMm0YGKxntEZQvsgF+pa8Me7
      2v9nuE7qSY32R+tSD86lk/q8aR+k1GMhyYL+kNjnTfsgAaBzv7yXUUkmdToChgQp9W+7VJKf
      LyOC5IS0py3MIKtO6lmjNJKPHwGDguSUtEb682RMkJyQ1kjergGDguzcf1z8k+016ds1YFCQ
      APDCAdnbkddee/6c10soyaggOSU3p8N0BAwLEgBOHT7t9RJE0mE6AgYG2d7SwSmZpy3cocV0
      BAwMEuCUzKfT82FkkO0tHeKvt7mlc/9xbaYjYGiQgF5ToVqC/pB2z4OxQQb9IZx/8YLXy/BM
      0B/Ca8+f0+6GgbFBAqtbd61GqdtWrRgdJFCbx5Od+49rt1UrxgcJAGeOnauZS0Ft4Q6cOabH
      NcdCtP9WKna8eek8rk8Peb2Mqgn6Q/jVy7/zehkVqYkJqZw5pt9BvlWmnMTV1IQEVr8N3Vt9
      F42alCZMRqXmglS6Bt9H1+D7Xi+jYqcOn9b2BKaQmg0SAHpHevBW30Wvl1GWoD+k9dn0Zmo6
      SAAYnhrChY/Pe70MW9RFbx2vM5ZS80ECq8eVvSM9WmzhaiqaenLGIHNIPuFpC3fg1OHTRk7F
      XAyyAElhmrw9F8IgixieGsLb/7royU8sUK/UqbXbngzSAnWM2TvSU9U41ZmzTq/wdhqDtEnF
      OTw1VPGWHvSHEPCF8MKB1QhNPVGxg0FWIBKbQSQ2g9n4zNrkzH+bik7FpiZfwKfHVwG6jUGS
      KDX14gqSj0GSKAySRGGQJAqDJFEYJInCIEkUBkmiMEgShUGSKAySRGGQJAqDJFEYJInCIEkU
      BkmiMEgShUGSKAySRGGQJAqDJFEYJInCIEkUBkmiMEgShUGSKAySRGGQJAqDJFEYJInCIEkU
      BkmiMEgShUGSKAySRGGQJMr/AVP3X6/CxfglAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Painel 1' width='192'>
      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
      Dwf/P1kzX+pZJpfFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Painel 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
